// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`translate template section define slot props 1`] = `
"<slot hovering=\\"{hovering}\\"></slot>
"
`;

exports[`translate template section extrat template from code 1`] = `
"<h1>Hello {name.toUpperCase()}!</h1>
"
`;

exports[`translate template section handle animation 1`] = `
"<div animate:slide>
  {item}
</div>
"
`;

exports[`translate template section handle custom event 1`] = `
"<div
  on:panstart=\\"{handlePanStart}\\"
  on:panmove=\\"{handlePanMove}\\"
  on:panend=\\"{() => {}}\\"
>
  {item}
</div>
"
`;

exports[`translate template section handle local transition 1`] = `
"<div transition:slide|local>
  {item}
</div>
"
`;

exports[`translate template section handle transition 1`] = `
"<p transition:fade=\\"{{y:200,duration:2000}}\\">
  Fades in and out
</p>
"
`;

exports[`translate template section handle transition: in and out 1`] = `
"<p in:fly out:fade=\\"{{y:200,duration:2000}}\\">
  Fades in and out
</p>
"
`;

exports[`translate template section handle transition: without params 1`] = `
"<p transition:fade>
  Fades in and out
</p>
"
`;

exports[`translate template section handle use directive 1`] = `
"<div use:pannable>
  {item}
</div>
"
`;

exports[`translate template section support raw html 1`] = `
"<p>{@html string}</p>
"
`;

exports[`translate template section support special elements 1`] = `
"<svelte:self {...file} />
<svelte:head>
  <link
    rel=\\"stylesheet\\"
    href=\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\\"
  />
</svelte:head>
"
`;

exports[`translate template section translate await 1`] = `
"{#await promise}
<div>...waiting</div>
{:then number}
<p>The number is {number}</p>
{:catch error}
<p style=\\"color: red\\">{error.message}</p>
{/await}
"
`;

exports[`translate template section translate await: only then exist 1`] = `
"{#await promise} {:then number}
<p>The number is {number}</p>
{/await}
"
`;

exports[`translate template section translate await: then & loading 1`] = `
"{#await promise}
<div>...waiting</div>
{:then number}
<p>The number is {number}</p>
{/await}
"
`;

exports[`translate template section translate debug tag 1`] = `
"{@debug user, value}
"
`;

exports[`translate template section translate each 1`] = `
"<h1>Te Famous Cats of YouTube</h1>
<ul>
  {#each cats as cat, index (cat.id)}
  <li>
    <a target=\\"_blank\\">
      {index + 1}: {cat.name}
    </a>
  </li>
  {/each}
</ul>
"
`;

exports[`translate template section translate each with value 1`] = `
"<ul>
  {#each cats as cat}
  <li>
    <a target=\\"_blank\\">
      {index + 1}: {cat.name}
    </a>
  </li>
  {/each}
</ul>
"
`;

exports[`translate template section translate each with value and index 1`] = `
"<ul>
  {#each cats as cat, index}
  <li>
    <a target=\\"_blank\\">
      {index + 1}: {cat.name}
    </a>
  </li>
  {/each}
</ul>
"
`;

exports[`translate template section translate each with value and key 1`] = `
"<ul>
  {#each cats as cat (cat.id)}
  <li>
    <a target=\\"_blank\\">
      {index + 1}: {cat.name}
    </a>
  </li>
  {/each}
</ul>
"
`;

exports[`translate template section translate else 1`] = `
"{#if x > 10}
<p>{x} is greater than 10</p>
{:else if x < 5}
<p>{x} is less than 5</p>

{:else}
<p>{x} is between 5 and 10</p>

{/if}
"
`;

exports[`translate template section translate if 1`] = `
"{#if user.loggedIn}
<button on:click=\\"{toggle}\\">
  Log out
</button>
{/if}
"
`;

exports[`translate template section translate tag attribute starts with on 1`] = `
"<button on:click=\\"{handleClick}\\">
  Clicked {count} {count === 1 ? 'time' : 'times'}
</button>
"
`;

exports[`translate template section use slot props 1`] = `
"<Hoverable let:hovering={active}>
                    <div class={active ? \\"active\\" : \\"\\"}>
                            <p>Hover over me!</p>
                        </div>
                </Hoverable>"
`;
